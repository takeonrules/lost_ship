#!/usr/bin/env ruby
require "bundler/setup"
require "dry/cli"
require "lost_ship"

module LostShip
  module CLI
    module Commands
      extend Dry::CLI::Registry

      class << self
        attr_accessor :lost_ship_game
      end
      self.lost_ship_game = ENV.fetch("LOST_SHIP_GAME", "./lost-ship.json")

      class Start < Dry::CLI::Command
        desc "Start a game of W.M. Akers' “Lost Ship”"
        argument(
          :filename,
          default: Commands.lost_ship_game,
          desc: "Filename (default: #{Commands.lost_ship_game}) to write your game"
        )

        def call(filename:, **)
          require "lost_ship/prompts/start"
          LostShip.prompt(:start, filename: filename)
        end
      end

      class Play < Dry::CLI::Command
        desc "Play a game of W.M. Akers' “Lost Ship”"
        argument(
          :filename,
          default: Commands.lost_ship_game,
          desc: "Filename (default: #{Commands.lost_ship_game}) to write your game"
        )
        def call(filename:, **)
          LostShip.load_from(filename: filename)
        end
      end

      class Status < Dry::CLI::Command
        desc "Output status of a game of W.M. Akers' “Lost Ship”"
        argument(
          :filename,
          default: Commands.lost_ship_game,
          desc: "Filename (default: #{Commands.lost_ship_game}) to write your game"
        )

        def call(filename:, **)
          LostShip.render(:status, filename: filename)
        end
      end

      register "start", Start, aliases: ["s"]
      register "play", Play, aliases: ["p"]
      register "status", Status
    end
  end
end

Dry::CLI.new(LostShip::CLI::Commands).call
